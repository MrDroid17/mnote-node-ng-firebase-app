{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACiC;AAC/B;AACE;AAC7C;;;GAGG;AAC+C;AACQ;AACC;AACO;AAEnB;AACU;AACY;AACf;AACQ;AACiB;AACoD;AAEnI,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sEAAc,EAAE;IACvC,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,kFAAkB,EAAE;CACrD,CAAC;AA0BF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAxBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,sEAAc;gBACd,kFAAkB;aACnB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,+DAAiB,CAAC,aAAa,CAAC,qEAAW,CAAC,cAAc,CAAC;gBAC3D,wEAAqB;gBACrB,gFAAyB;gBACzB,0DAAW;gBACX,wDAAU;gBACV,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;gBAChD,6FAAuB;gBACvB,kEAAe;gBACf,6FAAuB;gBACvB,iEAAc;gBACd,qEAAkB;gBAClB,gEAAa;aACd;YACD,SAAS,EAAE,CAAC,mEAAW,EAAE,2EAAe,CAAC;YACzC,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnDtB,oCAAoC,sBAAsB,yBAAyB,0BAA0B,gBAAgB,kBAAkB,yBAAyB,GAAG,sBAAsB,yBAAyB,qCAAqC,sBAAsB,0BAA0B,C;;;;;;;;;;;ACA/S,s0CAAs0C,cAAc,m/BAAm/B,WAAW,mXAAmX,aAAa,0uCAA0uC,2BAA2B,qW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA15H;AACiB;AAEvB;AACE;AAC3B;AACiC;AAM/D;IAUE,4BACU,WAAwB,EACxB,eAAgC,EAChC,MAAc,EACd,cAA8B;QAH9B,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAZxC,iBAAY,GAAG,KAAK,CAAC;QAIrB,qBAAgB,GAAa,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAE1D,YAAO,GAAG,oCAAoC,CAAC;IAO3C,CAAC;IAEL,qCAAQ,GAAR;QACE,oBAAoB;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,0BAA0B;IAC1B,8CAAiB,GAAjB,UAAkB,OAAO;QAAzB,iBAaC;QAZC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;gBACjD,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACT,KAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,iDAAI,CAAC,4BAA4B,CAAC,CAAC;gBACrC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,iDAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACrB,CAAC;YACH,CAAC,EAAE,aAAG;gBACJ,MAAM,CAAC,KAAK,CAAC;YACf,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,oBAAoB;IACpB,uCAAU,GAAV;QAAA,iBA0BC;QAzBC,gDAAgD;QAChD,IAAM,IAAI,GAAG;YACX,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC;QAEF,mBAAmB;QACnB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7C,iDAAI,CAAC,oCAAoC,CAAC,CAAC;YAC3C,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,8BAA8B;gBAC9C,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;gBACjB,KAAI,CAAC,WAAW,EAAE,CAAC,CAAE,uBAAuB;gBAC5C,iDAAI,CAAC,iBAAiB,CAAC,CAAC;gBACxB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC5B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,iDAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrB,CAAC;QACH,CAAC,EAAE,aAAG;YACJ,MAAM,CAAC,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,wCAAW,GAAnB;QAAA,iBAYC;QAXC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,cAAI;YAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,KAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAO,KAAI,CAAC,KAAK,CAAC,CAAC;gBAC3D,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;YAC7C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,wBAAwB;YAC1B,CAAC;QACH,CAAC,EAAE,aAAG;YACJ,MAAM,CAAC,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IAxEwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;yDAAC;IAPtC,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAYuB,kEAAW;YACP,0EAAe;YACxB,sDAAM;YACE,8DAAc;OAd7B,kBAAkB,CAiF9B;IAAD,yBAAC;CAAA;AAjF8B;;;;;;;;;;;;ACZ/B,0BAA0B,0BAA0B,8BAA8B,YAAY,4BAA4B,C;;;;;;;;;;;ACA1H,oEAAoE,oCAAoC,oBAAoB,qO;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1E;AACG;AACjB;AACK;AAOzC;IAEE,wBAAmB,eAAgC,EAC3C,MAAc;QADH,oBAAe,GAAf,eAAe,CAAiB;QAC3C,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE3B,iCAAQ,GAAR;IACA,CAAC;IAED,8BAAK,GAAL;QAAA,iBAIC;QAHC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,iDAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YAChF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,+BAAM,GAAN;QACE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACtC,CAAC;IAfU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAGoC,kEAAe;YACnC,sDAAM;OAHX,cAAc,CAiB1B;IAAD,qBAAC;CAAA;AAjB0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVgB;AACF;AACK;AACT;AACwB;AAEpB;AACY;AAKrD;IAWE,qBAAoB,IAAU,EACpB,YAA6B,EAC7B,MAAc;QAFxB,iBAcC;QAdmB,SAAI,GAAJ,IAAI,CAAM;QACpB,iBAAY,GAAZ,YAAY,CAAiB;QAC7B,WAAM,GAAN,MAAM,CAAQ;QAXhB,gBAAW,GAAkB,IAAI,CAAC;QAC1C;;UAEE;QACF,aAAQ,GAAW,qEAAW,CAAC,SAAS,GAAG,eAAe,CAAC;QAC3D,gBAAW,GAAW,qEAAW,CAAC,SAAS,GAAG,YAAY,CAAC;QAC3D,cAAS,GAAW,qEAAW,CAAC,SAAS,GAAG,YAAY,CAAC;QACzD,iBAAY,GAAW,qEAAW,CAAC,SAAS,GAAG,eAAe,CAAC;QAK7D,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,SAAS,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,SAAS,CACjB,UAAC,IAAI;YACH,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;YAChC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAC1B,CAAC;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,sCAAgB,GAAhB;QACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAC3C,IAAI,iDAAa,CAAC,kBAAkB,EAAE,CACvC,CAAC;IACJ,CAAC;IAED,gCAAU,GAAV;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED,4BAAM,GAAN;QAAA,iBAGC;QAFC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE;aAC7B,IAAI,CAAC,UAAC,GAAG,IAAK,YAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAA3B,CAA2B,CAAC,CAAC;IAChD,CAAC;IAGD;;KAEC;IACD,iCAAW,GAAX;QACE,IAAM,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC9B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAC7F,CAAC;IAED,WAAW;IACX,6BAAO,GAAP,UAAQ,IAAI;QACV,IAAM,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC9B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAChG,CAAC;IAED,cAAc;IACd,gCAAU,GAAV,UAAW,IAAI,EAAE,OAAO;QACtB,IAAM,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC9B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,OAAO,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAC1G,CAAC;IAED,cAAc;IACd,gCAAU,GAAV,UAAW,OAAO;QAChB,IAAM,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC9B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,GAAG,OAAO,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IACzG,CAAC;IA/EU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAY0B,kDAAI;YACN,kEAAe;YACrB,sDAAM;OAbb,WAAW,CAgFvB;IAAD,kBAAC;CAAA;AAhFuB;;;;;;;;;;;;;;;;;;;;;;;;;ACZmB;AAK3C;IAEE;IAAgB,CAAC;IAEjB,sCAAY,GAAZ,UAAa,IAAI;QACf,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YACzD,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAVU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,eAAe,CAW3B;IAAD,sBAAC;CAAA;AAX2B;;;;;;;;;;;;;ACL5B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE,wDAAwD;IACnE,cAAc,EAAG;QACf,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,gDAAgD;QAC5D,WAAW,EAAE,uDAAuD;QACpE,SAAS,EAAE,gCAAgC;QAC3C,aAAa,EAAE,4CAA4C;QAC3D,iBAAiB,EAAE,cAAc;KAClC;CACF,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACvBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes, PreloadAllModules } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n/**\n * firebase module\n * get environment for firebaseConfinguration\n */\nimport { AngularFireModule } from '@angular/fire';\nimport { environment } from '../environments/environment';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireDatabaseModule} from '@angular/fire/database';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthService } from './services/auth.service';\nimport { ValidateService } from './services/validate.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule, MatTableModule, MatPaginator, MatPaginatorModule, MatSortModule, MatFormField } from '@angular/material';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireAuthModule,\n    AngularFireDatabaseModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(routes, { useHash: false }),\n    BrowserAnimationsModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule\n  ],\n  providers: [AuthService, ValidateService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".mat-flat-button {\\n    margin-top: 5px;\\n    margin-bottom: 5px;\\n    margin-left: 10px\\n}\\n\\n.mat-table {\\n    width: 100%;\\n    text-align: center;\\n}\\n\\n.mat-header-cell {\\n    text-align: center;\\n    background: rgb(147, 209, 183);\\n    font-size: 16px;\\n    font-weight: bold\\n}\"","module.exports = \"<section class=\\\"content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n\\n            <div class=\\\"col-md-12\\\" style=\\\"margin-top:20px\\\">\\n                <div class=\\\"panel panel-default\\\">\\n                    <div class=\\\"panel-heading\\\">\\n                        <h4> Add note </h4>\\n                    </div>\\n                    <div class=\\\"panel-body\\\">\\n                        <!-- <form (click)=\\\"addNewNote()\\\" (click)=\\\"updateNote(note, note_object_id)\\\"> -->\\n                        <!-- <form (submit)=\\\"is_edit_mode ? updateNote( note, note_id ) : addNewNote()\\\"> -->\\n                        <form (submit)=addNewNote()>\\n\\n                            <div class=\\\"form-group note-form\\\">\\n                                <label class=\\\"note-form\\\">Note:</label>\\n                                <input class=\\\"note-form\\\" type=\\\"text\\\" [(ngModel)]=\\\"note\\\" name=\\\"note\\\" class=\\\"form-control\\\" required>\\n                                <label class=\\\"note-form\\\">Author:</label>\\n                                <input class=\\\"note-form\\\" style=\\\"display:inline\\\" type=\\\"text\\\" [(ngModel)]=\\\"author\\\" name=\\\"author\\\" class=\\\"form-control\\\" required>\\n                            </div>\\n\\n\\n                            <button mat-flat-button type=\\\"submit\\\" class=\\\"btn btn-md btn-success\\\">{{button_title}}</button>\\n                            <!-- Edit Note button -->\\n                            <!-- <button type=\\\"click\\\" class=\\\"btn btn-md btn-success\\\" *ngIf=\\\"is_edit_mode\\\">Update</button> -->\\n\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"panel panel-default\\\">\\n                    <div class=\\\"panel-heading\\\">\\n                        <h4>Notes List:</h4>\\n                    </div>\\n\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"col-md-8\\\">\\n                            <div class=\\\"mat-elevation-z8\\\">\\n                                <table mat-table [dataSource]=\\\"dataSource\\\">\\n\\n                                    <ng-container matColumnDef=\\\"note\\\">\\n                                        <th mat-header-cell *matHeaderCellDef> Note</th>\\n                                        <td mat-cell *matCellDef=\\\"let note\\\"> {{note.note}} </td>\\n                                    </ng-container>\\n\\n                                    <!-- Name Column -->\\n                                    <ng-container matColumnDef=\\\"author\\\">\\n                                        <th mat-header-cell *matHeaderCellDef> Author </th>\\n                                        <td mat-cell *matCellDef=\\\"let note\\\"> {{note.author}} </td>\\n                                    </ng-container>\\n\\n                                    <!-- Symbol Column -->\\n                                    <ng-container matColumnDef=\\\"action\\\">\\n                                        <th mat-header-cell *matHeaderCellDef> Action </th>\\n                                        <td mat-cell *matCellDef=\\\"let note\\\">\\n\\n\\n                                            <!-- <button class=\\\"btn btn-default icons\\\" title=\\\"update note\\\" (click)=\\\"onClickEditNote(note,note._id)\\\">\\n                                                <i class=\\\"fa fa-edit big-icon\\\" aria-hidden=\\\"true\\\"></i>\\n                                            </button> -->\\n\\n                                            <button mat-flat-button title=\\\"Delete Note\\\" (click)=\\\"onClickDeleteNote(note.id)\\\">Delete</button>\\n                                            <button mat-flat-button title=\\\"Edit Note\\\" (click)=\\\"onClickEditNote(note.id)\\\">Edit</button>\\n                                        </td>\\n                                    </ng-container>\\n\\n                                    <tr mat-header-row *matHeaderRowDef=\\\"note_array_label\\\"></tr>\\n                                    <tr mat-row *matRowDef=\\\"let row; columns: note_array_label;\\\"></tr>\\n                                </table>\\n\\n                                <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</section>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatTableDataSource, MatSort } from '@angular/material';\nimport { Note } from '../interface/notes';\nimport { AuthService } from '../services/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport swal from 'sweetalert';\nimport { ValidateService } from '../services/validate.service';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  notes: Note[];\n  button_title = 'Add';\n  dataSource;\n  note: string;\n  author: string;\n  note_array_label: string[] = ['note', 'author', 'action'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  message = 'Are you sure to delete this note ?';\n\n  constructor(\n    private authService: AuthService,\n    private validateService: ValidateService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    // getting all notes\n    this.getAllNotes();\n  }\n\n  // delete species function\n  onClickDeleteNote(note_id) {\n    if (confirm(this.message)) {\n      this.authService.deleteNote(note_id).subscribe(data => {\n        if (data) {\n          this.getAllNotes();\n          swal('Note deleted successfully.');\n        } else {\n          swal(data.message);\n        }\n      }, err => {\n        return false;\n      });\n    }\n  }\n\n  // add note function\n  addNewNote() {\n    // tslint:disable-next-line:no-shadowed-variable\n    const Note = {\n      note: this.note,\n      author: this.author\n    };\n\n    // check validation\n    if (!this.validateService.validateNote(Note)) {\n      swal('please enter note and author name.');\n      return false;\n    }\n\n    this.authService.addNote(Note).subscribe(data => {\n      if (data.success) {\n        this.note = ''; // black the field after input\n        this.author = '';\n        this.getAllNotes();  // get all species list\n        swal('New Note added.');\n        this.button_title = 'Add';\n      } else {\n        swal(data.message);\n      }\n    }, err => {\n      return false;\n    });\n  }\n\n  private getAllNotes() {\n    this.authService.getAllNotes().subscribe(data => {\n      if (data.length !== 0) {\n        this.notes = data;\n        this.dataSource = new MatTableDataSource<Note>(this.notes);\n        this.dataSource.paginator = this.paginator;\n      } else {\n        // handle else condition\n      }\n    }, err => {\n      return false;\n    });\n  }\n\n}\n","module.exports = \"button {\\n    align-items: center;\\n    align-content: center\\n}\\n\\n.login {\\n    align-items: center\\n}\"","module.exports = \"<div *ngIf=\\\"angularFireAuth.user | async as user; else showLogin\\\">\\n    <h1>Hello {{ user.displayName }}!</h1>\\n    <button mat-flat-button (click)=\\\"logout()\\\">Logout</button>\\n</div>\\n\\n<ng-template #showLogin>\\n    <p>Please login.</p>\\n    <button mat-flat-button (click)=\\\"login()\\\">Login with Google</button>\\n\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { auth } from 'firebase/app';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public angularFireAuth: AngularFireAuth,\n  private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.angularFireAuth.auth.signInWithPopup(new auth.GoogleAuthProvider()).then(user => {\n      this.router.navigate(['dashboard']);\n    });\n  }\n  logout() {\n    this.angularFireAuth.auth.signOut();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private user: Observable<firebase.User>;\n  private userDetails: firebase.User = null;\n  /**\n  * URL List\n  */\n  ADD_NOTE: string = environment.serverUrl + '/api/note/add';\n  DELETE_NOTE: string = environment.serverUrl + '/api/note/';\n  EDIT_NOTE: string = environment.serverUrl + '/api/note/';\n  GET_ALL_NOTE: string = environment.serverUrl + '/api/note/all';\n\n  constructor(private http: Http,\n    private firebaseAuth: AngularFireAuth,\n    private router: Router) {\n    this.user = firebaseAuth.authState;\n    this.user.subscribe(\n      (user) => {\n        if (user) {\n          this.userDetails = user;\n          console.log(this.userDetails);\n        } else {\n          this.userDetails = null;\n        }\n      }\n    );\n  }\n\n  /***\n   * gmail login\n   */\n  signInWithGoogle() {\n    return this.firebaseAuth.auth.signInWithPopup(\n      new firebase.auth.GoogleAuthProvider()\n    );\n  }\n\n  isLoggedIn() {\n    if (this.userDetails == null) {\n      return false;\n    } else {\n      this.router.navigate(['/dashboard']);\n      return true;\n    }\n  }\n\n  logout() {\n    this.firebaseAuth.auth.signOut()\n      .then((res) => this.router.navigate(['/']));\n  }\n\n\n  /**\n * all note\n */\n  getAllNotes() {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get(this.GET_ALL_NOTE, { headers: headers }).pipe(map(res => res.json()));\n  }\n\n  // add note\n  addNote(note) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post(this.ADD_NOTE, note, { headers: headers }).pipe(map(res => res.json()));\n  }\n\n  // update note\n  updateNote(note, note_id) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.put(this.EDIT_NOTE + note_id, note, { headers: headers }).pipe(map(res => res.json()));\n  }\n\n  // delete note\n  deleteNote(note_id) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.delete(this.DELETE_NOTE + note_id, { headers: headers }).pipe(map(res => res.json()));\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateNote(note) {\n    if (note.note === undefined || note.author === undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverUrl: 'https://angular-firebase-storage-b50a7.firebaseapp.com',\n  firebaseConfig : {\n    apiKey: 'AIzaSyBvj5vyeHiIZYmrwk0a6Z0MrGPdaE8w1mE',\n    authDomain: 'angular-firebase-storage-b50a7.firebaseapp.com',\n    databaseURL: 'https://angular-firebase-storage-b50a7.firebaseio.com',\n    projectId: 'angular-firebase-storage-b50a7',\n    storageBucket: 'angular-firebase-storage-b50a7.appspot.com',\n    messagingSenderId: '447656612162'\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}